## ============================== ###
##        GPG CONFIG FILE         ###
## ============================== ###

#-----------------------------
# default key
#-----------------------------
## The default key to sign with. If this option is not used, the default key is
## the first key found in the secret keyring
default-key 0x55D679499AE8009D49BA31473AED4B68E6FD33BC

## Use name as default recipient if option '--recipient' is
## not used and don't ask if this is a valid one.
default-recipient 0x55D679499AE8009D49BA31473AED4B68E6FD33BC

#-----------------------------
# behavior
#-----------------------------
## Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
## the agent before it asks for a passphrase.
use-agent

## Don't disclose the version
no-emit-version

## Disable comment string in clear text signatures and ASCII armored messages
no-comments

## We want to force UTF-8 everywhere
display-charset utf-8

## when outputting certificates, view user IDs distinctly from keys:
fixed-list-mode

## Disable inclusion of the version string in ASCII armored output
no-emit-version

## Display long key IDs
keyid-format 0xlong

## List all keys (or the specified ones) along with their fingerprints
with-fingerprint
with-keygrip

## Display the calculated validity of user IDs during key listings
## You should always know at a glance which User IDs gpg thinks are legitimately bound to the keys in your keyring:
verify-options show-uid-validity
list-options show-uid-validity

list-options show-keyring
list-options show-sig-expire
list-options show-usage
list-options show-sig-expire
list-options show-unusable-subkeys


#-----------------------------
# keyserver
#-----------------------------
## This is the server that --recv-keys, --send-keys, and --search-keys will
## communicate with to receive keys from, send keys to, and search for keys on
# keyserver <KEY_SERVER_URL>

## When searching for a key with --search-keys, include keys that are marked on
## the keyserver as revoked
keyserver-options include-revoked

## Some suggestions added from riseup https://we.riseup.net/riseuplabs+paow/openpgp-best-practices
## When creating a key, individuals may designate a specific keyserver to use to pull their keys from.
## The above option will disregard this designation and use the pool, which is useful because (1) it
## prevents someone from designating an insecure method for pulling their key and (2) if the server
## designated uses hkps, the refresh will fail because the ca-cert will not match, so the keys will
## never be refreshed.
keyserver-options no-honor-keyserver-url

#-----------------------------
# algorithm and ciphers
#-----------------------------
personal-digest-preferences SHA512
cert-digest-algo SHA512
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
personal-cipher-preferences TWOFISH CAMELLIA256 AES 3DES

#-----------------------------
# verbose
#-----------------------------


#verbose
#verbose


## Prompt before overwriting any files.
#interactive

## Create ASCII armored output. The default is to create the binary OpenPGP format.
#armor

## gpg caches the passphrase used for symmetric encryption so that a
## decrypt operation may not require that the user needs to enter the passphrase.
## The  option 'no-symkey-cache' can be used to disable this feature.
no-symkey-cache


## Enable certain PROGRESS status outputs. This option allows frontends to display a
## progress indicator while gpg is processing larger files.
##  (There is a slight performance overhead using it.)
#enable-progress-filter
