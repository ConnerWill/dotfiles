# Multiple copy/paste buffers
# In addition to being able to copy/paste from the system clipboard,
# in kitty you can also setup an arbitrary number of copy paste buffers. 
# To do so, simply add something like the following to your kitty.conf:

map f1 copy_to_buffer a
map f2 paste_from_buffer a

# This will allow you to press F1 to copy the current selection to an
# internal buffer named a and F2 to paste from that buffer.
# The buffer names are arbitrary strings,
# so you can define as many such buffers as you need.














## 
## 
## 
##    Tip: The tmux plugin tmux-yank provides similar functionality.
## 
##    It is possible to copy a tmux selection to the X clipboard (and to X primary/secondary selections), and paste from the X clipboard into tmux. The following tmux config file snippet integrates the X
##    clipboard/selection with the current tmux selection using the program xsel:
## # Emacs style
bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key C-y run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
## 
## # Vim style
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
## 
##    Note that it may be necessary to unbind the previous window shortcut with unbind p for the latter to work.
## 
##    xclip could also be used for this purpose. Unlike xsel, it works better when printing a raw bitstream that does not fit the current locale. Nevertheless, it is neater to use xsel because xclip does not
##    close STDOUT after it has read from the tmux buffer. As such, tmux does not know that the copy task has completed, and continues to wait for xclip to terminate, thereby rendering tmux unresponsive. A
##    workaround is to redirect STDOUT to /dev/null:
## # Vim style
## bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
i
