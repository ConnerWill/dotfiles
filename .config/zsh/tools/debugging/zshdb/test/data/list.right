(dbg-test1.sh:4):
fn1 () { echo "fn1 here" x=5 fn3 }
+# Test of debugger 'list' command
+# 
+help l
**list**[**>**] [*location*|**.**|**-**] [*num*]

List source code.

Without arguments, print lines centered around the current line. If
*location* is given, that number of lines is shown.

If this is the first list command issued since the debugger command
loop was entered, then the current line is the current frame. If a
subsequent list command was issued with no intervening frame changing,
then that is start the line after we last one previously shown.

A *location* is either:

* a number, e.g. 5,
* a filename, colon, and a number, e.g. `/etc/profile:5`,
* a "." for the current line number
* a "-" for the lines before the current linenumber

By default aliases **l>** and **list>** are set to list. In this case and
more generally when the alias ends in ">", rather than center lines
around *location* that will be used as the starting point.

Examples:
---------

    list 5                  # List starting from line 5
    list 4+1                # Same as above.
    list /etc/profile:5     # List starting from line 5 of /etc/profile
    list /etc/profile 5     # Same as above.
    list /etc/profile 5 6   # list lines 5 and 6 of /etc/profile
    list /etc/profile 5 2   # Same as above, since 2 < 5.
    list profile:5 2        # List two lines starting from line 5 of profile
    list .                  # List lines centered from where we currently are stopped
    list -                  # List lines previous to those just shown

See also:
---------

**set listsize** or **show listsize** to see or set the value.


Aliases for list: l>, list>, l
+### List default location
+list 
  1:    #!/bin/zsh -f
  2:    # This code is used for various debugger testing.
  3:    
  4: => fn1() {
  5:        echo "fn1 here"
  6:        x=5
  7:        fn3
  8:    }    
  9:    
 10:    fn2() {
+### Should list next sets of lines
+l 
 11:        name="fn2"
 12:        echo "$name here"
 13:        x=6
 14:    }    
 15:    
 16:    fn3() {
 17:        name="fn3"
 18:        x=$1
 19:    }    
 20:    
+l 
 21:    x=22
 22:    y=23
 23:    for i in 0 1 3 ; do
 24:      ((x += i))
 25:    done
 26:    x=27
 27:    y=b
 28:    x=29
 29:    echo $(fn3 30)
 30:    fn3 31
+l 
 31:    fn1;
 32:    fn3 33
 33:    source ./dbg-test1.sub
 34:    exit 0
+### Original set and then beginning
+l .
  1:    #!/bin/zsh -f
  2:    # This code is used for various debugger testing.
  3:    
  4: => fn1() {
  5:        echo "fn1 here"
  6:        x=5
  7:        fn3
  8:    }    
  9:    
 10:    fn2() {
+list -
+# 
+# Should not see anything since we are out of bounds
+# 
+list 999
** Line 994 is too large. File dbg-test1.sh has only 34 lines.
+######################################################### 
+### 'list file:line' and canonicalization of filenames...
+list ../example/dbg-test1.sh:1
  1:    #!/bin/zsh -f
  2:    # This code is used for various debugger testing.
  3:    
  4: => fn1() {
  5:        echo "fn1 here"
  6:        x=5
  7:        fn3
  8:    }    
  9:    
 10:    fn2() {
+list ../example/dbg-test1.sh:20
 15:    
 16:    fn3() {
 17:        name="fn3"
 18:        x=$1
 19:    }    
 20:    
 21:    x=22
 22:    y=23
 23:    for i in 0 1 3 ; do
 24:      ((x += i))
+list ../example/dbg-test1.sh:30
 25:    done
 26:    x=27
 27:    y=b
 28:    x=29
 29:    echo $(fn3 30)
 30:    fn3 31
 31:    fn1;
 32:    fn3 33
 33:    source ./dbg-test1.sub
 34:    exit 0
+list ../example/dbg-test1.sh:999
** Line 994 is too large. File dbg-test1.sh has only 34 lines.
+list ./badfile:1
** File "badfile" not found in read-in files.
** See 'info files' for a list of known files and
** 'load' to read in a file.
+######################################################### 
+set trace-commands on
+### list of functions...
+## list fn1
+## list bogus
+######################################################### 
+### Testing window command..."
+## window
+### Testing '.' and list>
+l .
  1:    #!/bin/zsh -f
  2:    # This code is used for various debugger testing.
  3:    
  4: => fn1() {
  5:        echo "fn1 here"
  6:        x=5
  7:        fn3
  8:    }    
  9:    
 10:    fn2() {
+list> .
  4: => fn1() {
  5:        echo "fn1 here"
  6:        x=5
  7:        fn3
  8:    }    
  9:    
 10:    fn2() {
 11:        name="fn2"
 12:        echo "$name here"
 13:        x=6
+# 
+### Testing set/show listsize
+show listsize
Number of source lines zshdb will list by default is 10.
+### Setting listsize to 3...
+set listsize 3
+l 10
  9:    
 10:    fn2() {
 11:        name="fn2"
+### Window command...
+## w
+## p "- command..."
+## -
+### Setting listsize to 4...
+set listsize 4
+show listsize
Number of source lines zshdb will list by default is 4.
+l 10
  8:    }    
  9:    
 10:    fn2() {
 11:        name="fn2"
+### Window command...
+## w
+### '-' command...
+### -
+#<-This comment doesn't have a space after
+#the initial `#'
+quit 
zshdb: That's all, folks...
