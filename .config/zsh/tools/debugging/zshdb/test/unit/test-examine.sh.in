#!@SH_PROG@
# -*- shell-script -*-
setopt ksharrays

test_examine()
{
    typeset -i _Dbg_logging=0
    typeset -i _Dbg_logging_redirect=0
    typeset _Dbg_tty=''
    typeset msg
    typeset expect
    # Integer property variable
    typeset -i an_int=2
    msg=$(_Dbg_do_examine an_int)

    typeset -fuz is-at-least
    if is-at-least 5.4.1 ; then
	expect='typeset -g -i an_int=2'
    else
	expect='typeset -i an_int=2'
    fi
    assertEquals  "$expect" "$msg"

    # String variable
    typeset str_var='ho'
    msg=$(_Dbg_do_examine str_var)
    if is-at-least 5.4.1 ; then
	assertEquals "typeset -g str_var=ho" "$msg"
    else
	assertEquals "typeset str_var=ho" "$msg"
    fi

    # Exported string variable
    typeset -x exported_str_var='exported string'
    if is-at-least 5.4.1 ; then
	expect=$(print -r "export exported_str_var='exported string'")
    else
	expect=$(print -r "typeset -x exported_str_var='exported string'")
    fi
    msg=$(_Dbg_do_examine exported_str_var)
    assertEquals  "$expect" "$msg"

    # Array variable
    typeset -a an_array
    an_array=(1 2 3)
	expect_old='typeset -a an_array
an_array=(1 2 3)'
    if is-at-least 5.4.1 ; then
	expect='typeset -g -a an_array=( 1 2 3 )'
    else
	expect='typeset -a an_array
an_array=( 1 2 3 )'
    fi
    msg=$(_Dbg_do_examine an_array)
    if [[ $msg != $expect ]]; then
       expect=$expect_old
    fi
    assertEquals "$expect" "$msg"

    # Expression involving variables
    msg=$(_Dbg_do_examine Dbg_logging+5)
    assertEquals '5' "$msg"

    # Expression involving a function
    function a_function { :; }
    msg=$(_Dbg_do_examine a_function)
    assertEquals 'a_function () {
	:
}' "$msg"
}

abs_top_srcdir=@abs_top_srcdir@
abs_top_srcdir=${abs_top_srcdir%%/}/

_Dbg_libdir=$abs_top_srcdir
. ${abs_top_srcdir}lib/validate.sh
. ${abs_top_srcdir}lib/fns.sh
. ${abs_top_srcdir}lib/msg.sh
. ${abs_top_srcdir}lib/help.sh
. ${abs_top_srcdir}lib/alias.sh
. ${abs_top_srcdir}lib/save-restore.sh
. ${abs_top_srcdir}command/examine.sh

SHUNIT_PARENT=$0

[[ @CMDLINE_INVOKED@ ]] && . ${shunit_file}
