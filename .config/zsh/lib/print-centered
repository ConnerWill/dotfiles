function print-centered {
  [[ $# == 0 ]] \
    && echo "\n\e[0;1;38;5;196mNo parameter given\e[0m" >&2 \
    && echo "\nUsage:\n\t\e[0;1;38;5;46m$0 \e[0;38;5;15m\"<phrase to center>\" \"<1 char to fill empty space>\" \e[0;38;5;240m[<number of columns>] [<1 char to surround the whole result>\e[0m\n" >&2 \
    && return 1
  declare -i NB_COLS
  [[ $# -ge 3 ]] && NB_COLS=$3 || NB_COLS="$(tput cols)"
  [[ $# -ge 4 ]] && SURROUNDING_CHAR=${4:0:1} && NB_COLS=$((NB_COLS - 2 ))
  declare -i str_len="${#1}"
  [[ $str_len -ge $NB_COLS ]] && echo "$1" && return 0            # Simply displays the text if it exceeds the maximum length
  declare -i filler_len="$(( (NB_COLS - str_len) / 2 ))"          # Build the chars to add before and after the given text
  [[ $# -ge 2 ]] && ch="${2:0:1}" || ch=" "
  filler=""; for (( i = 0; i < filler_len; i++ )); do
  filler="${filler}${ch}" ; done
  printf "%s%s%s%s" "$SURROUNDING_CHAR" "$filler" "$1" "$filler"  # Add an additional filler char at the end if the result length is not even
  [[ $(( (NB_COLS - str_len) % 2 )) -ne 0 ]] && printf "%s" "${ch}"
  printf "%s\n" "${SURROUNDING_CHAR}"
  return 0
}

